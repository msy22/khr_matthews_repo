<!-- 

This file will launch an instance of the move_base node that does require a pre-existing map, but simply uses laser and odometry data to navigate from its 
current position to an assigned move goal.

-->

<launch>
        <!-- Launch the move_base node with the default jackal_navigation configuration -->
        <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
                <rosparam file="$(find knee_high_robotics)/params/custom_jackal_params/costmap_common_params.yaml" command="load" ns="global_costmap" />
                <rosparam file="$(find knee_high_robotics)/params/custom_jackal_params/costmap_common_params.yaml" command="load" ns="local_costmap" />
                <rosparam file="$(find knee_high_robotics)/params/custom_jackal_params/odom_nav_params/local_costmap_params.yaml" command="load" />
                <rosparam file="$(find knee_high_robotics)/params/custom_jackal_params/odom_nav_params/global_costmap_params.yaml" command="load" />
                <rosparam file="$(find knee_high_robotics)/params/custom_jackal_params/base_local_planner_params.yaml" command="load" />
                <rosparam file="$(find knee_high_robotics)/params/custom_jackal_params/move_base_params.yaml" command="load" />
                <param name="base_global_planner" type="string" value="navfn/NavfnROS" />
                <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>

                <!-- Re-map the input odom stream so it takes the output from ekf_localization -->
                <remap from="odom" to="odometry/filtered/global" />
        </node>
</launch>
